// Day 3 Find and remove the Nth Node from the End.

public class FindRemoveNthNodeFromEnd {

    public class Node {
        int data;
        Node next;

        public Node (int data){
            this.data = data;
            this.next = null;
        }
    }

    public static Node head;
    public static Node tail;
    
    // Add Last
    public void addLast(int data){
        Node newNode = new Node(data);
        if(head == null){
            head = tail = newNode;
            return;
        }
        tail.next = newNode;
        tail = newNode;
    }

    // Print Linked List
    public void printLL(){
        Node temp = head;
        while(temp != null){
            System.out.print(temp.data + "->");
            temp = temp.next;
        }
        System.out.println("null");
    }

    // Find and Remove Nth Node from the End  // From start it would be (size-n+1)
    public void removeNthNodeFromEnd(int n){
        Node temp = head;
        int size = 0;

        while(temp!=null){
            temp= temp.next;
            size++;
        }

        if(n == size){
            head = head.next;
            return;
        }

        int i=1;
        int idxToFind = size - n;
        Node prev = head;

        while(i < size-n){
            prev = prev.next;
            i++;
        }
        prev.next = prev.next.next;
    }

    public static void main (String args[]){
        FindRemoveNthNodeFromEnd ll = new FindRemoveNthNodeFromEnd();
        ll.addLast(1);
        ll.addLast(2);
        ll.addLast(3);
        ll.addLast(4);
        ll.addLast(5);
        ll.printLL();

        ll.removeNthNodeFromEnd(2);
        ll.printLL();
    }
}
